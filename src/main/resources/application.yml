server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://config-service:80 # config-service를 Kubernetes에서 사용할 수 있는 이름으로 변경
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://polar-postgres:80/polardb_catalog # PostgreSQL 서비스 이름 사용
    hikari:
      connection-timeout: 2000 #ms
      maximum-pool-size: 5
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://abd51a0238f99428382c93555ca43fc5-1208788426.ap-southeast-2.elb.amazonaws.com/realms/PolarBookshop
#          issuer-uri: http://polar-keycloak:80/realms/PolarBookshop # Keycloak 서비스 이름 사용

management:
  endpoints:
    web:
      exposure:
        include: refresh

polar:
  greeting: Welcome to the local book catalog!
